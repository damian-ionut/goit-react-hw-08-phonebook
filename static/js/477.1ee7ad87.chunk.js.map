{"version":3,"file":"static/js/477.1ee7ad87.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"inputWrapper\":\"ContactForm_inputWrapper__9zhfJ\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formLabel\":\"ContactForm_formLabel__TSwxK\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <div className={css.inputWrapper}>\n        <input className={css.formInput} type=\"text\" name=\"name\" placeholder=\" \" />\n        <label className={css.formLabel}>Name</label>\n      </div>\n      <div className={css.inputWrapper}>\n        <input className={css.formInput} type=\"tel\" name=\"number\" placeholder=\" \" />\n        <label className={css.formLabel}>Number</label>\n      </div>\n      <button className={css.addContactBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;","// extracted by mini-css-extract-plugin\nexport default {\"contactListContainer\":\"ContactList_contactListContainer__Mco5m\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactText\":\"ContactList_contactText__mBjoQ\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactListContainer}>\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contactItem}>\n            <p className={css.contactText}>\n              {name}: {number}\n            </p>\n            <button\n              className={css.contactListBtn}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"label\":\"Filter_label__vEd1E\"};","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectStatusFilter } from '../../redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.filterContainer}>\n      <label className={css.label}>\n        <input\n          className={css.contactInput}\n          type=\"text\"\n          value={filter}\n          onChange={onChange}\n          placeholder=\"Find contacts by name\"\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const container = document.getElementById('contacts-container');\n\n    if (container) {\n      container.style.display = 'flex';\n      container.style.flexDirection = 'column';\n      container.style.alignItems = 'center';\n      container.style.backgroundColor = '#fff';\n      container.style.borderRadius = '10px';\n      container.style.padding = '20px';\n      container.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';\n      container.style.margin = '20px auto';\n      container.style.width = '25%'; \n    }\n  }, []);\n\n  return (\n    <div id=\"contacts-container\">\n      <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Contacts</h2>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["ContactForm","dispatch","useDispatch","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","addContact","name","elements","value","number","reset","autoComplete","children","_jsx","type","placeholder","selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactList","useSelector","normalizedFilter","toLowerCase","filteredContacts","_ref","includes","useEffect","fetchContacts","map","_ref2","id","onClick","deleteContact","Filter","onChange","setFilter","target","Contacts","container","document","getElementById","style","display","flexDirection","alignItems","backgroundColor","borderRadius","padding","boxShadow","margin","width","textAlign","marginBottom"],"sourceRoot":""}